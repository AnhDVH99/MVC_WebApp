@model ASP.NET_Core_MVC_Piacom.Models.ViewModels.EditCustomerRequest

<div>
    <div class="container">
        <h1 class="styled-heading">Edit customer</h1>
    </div>
</div>

<div class="container py-5">
    @if (Model != null)
    {
        <form method="post">
            <input type="hidden" asp-for="CustomerID" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">Customer Name</label>
                    <input type="text" class="form-control short-input" id="cusName" asp-for="CustomerName" />
                    <span asp-validation-for="CustomerName" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Phone</label>
                    <input type="text" class="form-control short-input" id="phone" asp-for="Phone" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">AddressLine1</label>
                    <input type="text" class="form-control short-input" id="address1" asp-for="Address1" />
                    <span asp-validation-for="Address1" class="text-danger"></span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">AddressLine2</label>
                    <input type="text" class="form-control short-input" id="address2" asp-for="Address2" />
                    <span asp-validation-for="Address2" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">City</label>
                    <input type="text" class="form-control short-input" id="city" asp-for="City" />
                    <span asp-validation-for="City" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">State</label>
                    <input type="text" class="form-control short-input" id="state" asp-for="State" />
                    <span asp-validation-for="State" class="text-danger"></span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">PostalCode</label>
                    <input type="text" class="form-control short-input" id="postalCode" asp-for="PostalCode" />
                    <span asp-validation-for="PostalCode" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Country</label>
                    <input type="text" class="form-control short-input" id="country" asp-for="Country" />
                    <span asp-validation-for="Country" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Employee name</label>
                    <select type="text" class="form-control short-input" asp-items="@Model.Employees" asp-for="SaleRepEmployeeID">
                    </select>
                    <span asp-validation-for="SaleRepEmployeeID" class="text-danger"></span>
                </div>
            </div>

            <div>
                <div class="container">
                    <h1 class="styled-heading">Credit Limit</h1>
                </div>
            </div>

            <div class="form-group">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Total</th>
                            <th>From date</th>
                            <th>To Date</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="creditLimitRows">
                        @for (int i = 0; i < Model.CreditLimits.Count; i++)
                        {
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <tr>
                                <td>
                                    <input type="hidden" asp-for="CreditLimits[i].CreditLimitID" class="form-control" />
                                    <input type="number" asp-for="CreditLimits[i].Total" class="form-control" required/>
                                </td>
                                <td>
                                    <input type="date" asp-for="CreditLimits[i].FromDate" class="form-control" required />
                                </td>
                                <td>
                                    <input type="date" asp-for="CreditLimits[i].ToDate" class="form-control" required />
                                    <span asp-validation-for="CreditLimits[i].ToDate" class="text-danger"></span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="mb-3">
                    <button type="button" class="btn btn-primary" onclick="addCreditLimitRow()">Add Credit Limit</button>

                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="d-flex">
                        <button type="submit" class="btn btn-dark">Update</button>
                        <button type="submit" class="btn btn-danger ms-2" asp-area="" asp-controller="Customer" asp-action="Delete" onclick="return confirm('Are you sure you want to delete this customer?');">
                            Delete
                    </button>
                    </div>
                </div>
            </div>
        </form>
    }
    else
    {
        <p>Customer not found!</p>
    }




    @section Scripts {
        <script>
            // Function to add a new row for Credit Limits
            function addCreditLimitRow() {
                var rowCount = document.getElementById('creditLimitRows').rows.length;
                var newRow = `
                                                    <tr>
                                                        <td>
                                                            <input type="hidden" name="CreditLimits[` + rowCount + `].CreditLimitID" class="form-control"  />
                                                            <input type="number" name="CreditLimits[` + rowCount + `].Total" class="form-control" required />
                                                        </td>
                                                        <td>
                                                            <input type="date" name="CreditLimits[` + rowCount + `].FromDate" class="form-control" required />
                                                        </td>
                                                        <td>
                                                            <input type="date" name="CreditLimits[` + rowCount + `].ToDate" class="form-control" required />
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                                                        </td>
                                                    </tr>`;
                document.getElementById('creditLimitRows').insertAdjacentHTML('beforeend', newRow);
            }

            // Function to remove a row
            function removeRow(button) {
                var row = button.closest("tr");
                row.remove();

                // Cap nhat cac hang con lai
                var rows = document.querySelectorAll("#creditLimitRows tr");
                rows.forEach((row, index) => {
                    row.querySelectorAll("input").forEach(input => {
                        var name = input.getAttribute("name");
                        if (name) {
                            // thay doi chi so trong name tu CreditLimits[i] thanh CreditLimits[index]
                            var newName = name.replace(/\[\d+\]/, "[" + index + "]");
                            input.setAttribute("name", newName);
                        }

                        var id = input.getAttribute("id");
                        if (id) {
                            // thay doi chi so trong id tu CreditLimits_i_ thanh CreditLimits_index_
                            var newId = id.replace(/_\d+_/, "_" + index + "_");
                            input.setAttribute("id", newId);
                        }
                    });
                });
            }
        </script>
    }

</div>

<style>
    .short-input {
        max-width: 250px; /* Adjust the width as needed */
    }

    .styled-heading {
        font-size: 2.5rem;
        font-weight: bold;
        color: black;
        background: linear-gradient(to right, #6a11cb, black);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        padding: 10px 0;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.05);
    }
</style>

@await Html.PartialAsync("_ValidationScriptsPartial")